package org.example;

import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import org.graph4j.*;
import org.graph4j.alg.clique.BronKerboschCliqueIterator;
import org.graph4j.util.Clique;

import javax.xml.crypto.Data;

public class Bonus {
    public static void main(String[] args) throws SQLException, ClassNotFoundException, ParseException {
//        Artist artist1 = new Artist(1, "Pink Floyd");
//        Artist artist2 = new Artist(2, "Linkin Park");
//        Artist artist3 = new Artist(3, "Michael Jackson");
//        Artist artist4 = new Artist(4, "The Weeknd");
//        Artist artist5 = new Artist(5, "Skillet");
//        Artist artist6 = new Artist(6, "Justin Bieber");
//        Artist artist7 = new Artist(7, "Tupac");
//        Artist artist8 = new Artist(8, "Eminem");
//        ArtistDAO artistConnection = new ArtistDAO();
//        artistConnection.create(artist1);
//        artistConnection.create(artist2);
//        artistConnection.create(artist3);
//        artistConnection.create(artist4);
//        artistConnection.create(artist5);
//        artistConnection.create(artist6);
//        artistConnection.create(artist7);
//        artistConnection.create(artist8);
//        System.out.println(artistConnection.findById(artist2));
//        Genre genre1 = new Genre(1, "Rock");
//        Genre genre2 = new Genre(2, "Pop");
//        Genre genre3 = new Genre(3, "Metal");
//        Genre genre4 = new Genre(4, "Rap");
//        GenreDAO genreConnection = new GenreDAO();
//        genreConnection.create(genre1);
//        genreConnection.create(genre2);
//        genreConnection.create(genre3);
//        genreConnection.create(genre4);
//        System.out.println(genreConnection.findByName(genre3));
//        Album album1 = new Album(1, 1979, "The Wall", "Pink Floyd", "Rock");
//        Album album2 = new Album(2,2003,"Meteora","Linkin Park","Rock");
//        Album album3 = new Album(3, 1979, "Off the Wall", "Michael Jackson", "Pop");
//        Album album4 = new Album(4, 1973, "The Dark Side of the Moon", "Pink Floyd", "Rock");
//        Album album5 = new Album(5, 1975, "Wish You Were Here", "Pink Floyd", "Rock");
//        Album album6 = new Album(6, 1994, "The Division Bell", "Pink Floyd", "Rock");
//        Album album7 = new Album(7, 1995, "Pulse", "Pink Floyd", "Rock");
//        Album album8 = new Album(8, 2017, "One More Light", "Linkin Park", "Rock");
//        Album album9 = new Album(9, 2007, "Minutes to Midnight", "Linkin Park", "Rock");
//        Album album10 = new Album(10, 2003, "Live in Texas", "Linkin Park", "Rock");
//        Album album11 = new Album(11, 2020, "After Hours", "The Weeknd", "Pop");
//        Album album12 = new Album(12, 2016, "Starboy", "The Weeknd", "Pop");
//        Album album13 = new Album(13, 2015, "Beauty Behind the Madness", "The Weeknd", "Pop");
//        Album album14 = new Album(14, 2013, "Rise", "Skillet", "Rock");
//        Album album15 = new Album(15, 2009, "Awake", "Skillet", "Rock");
//        Album album16 = new Album(16, 2015, "Purpose", "Justin Bieber", "Pop");
//        Album album17 = new Album(17, 2012, "Believe", "Justin Bieber", "Pop");
//        Album album18 = new Album(18, 2001, "Until The End Of Time", "Tupac", "Rap");
//        Album album19 = new Album(19, 2004, "Loyal to the Game", "Tupac", "Rap");
//        Album album20 = new Album(20, 2010, "Recovery", "Eminem", "Rap");
//        Album album21 = new Album(21, 2017, "Revival", "Eminem", "Rap");
//        AlbumDAO albumConnection = new AlbumDAO();
//        albumConnection.create(album1);
//        albumConnection.create(album2);
//        albumConnection.create(album3);
//        albumConnection.create(album4);
//        albumConnection.create(album5);
//        albumConnection.create(album6);
//        albumConnection.create(album7);
//        albumConnection.create(album8);
//        albumConnection.create(album9);
//        albumConnection.create(album10);
//        albumConnection.create(album11);
//        albumConnection.create(album12);
//        albumConnection.create(album13);
//        albumConnection.create(album14);
//        albumConnection.create(album15);
//        albumConnection.create(album16);
//        albumConnection.create(album17);
//        albumConnection.create(album18);
//        albumConnection.create(album19);
//        albumConnection.create(album20);
//        albumConnection.create(album21);
//        System.out.println(albumConnection.findById(album1));
//        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
//        Date date = new Date();
//        date = dateFormat.parse(dateFormat.format(date));
//        System.out.println(date.getTime());
//        Timestamp timestamp = new Timestamp(date.getTime());
//        List<Album> list1 = new ArrayList<>();
//        list1.add(album1);
//        list1.add(album5);
//        list1.add(album11);
//        list1.add(album18);
//        list1.add(album21);
//        List<Album> list2 = new ArrayList<>();
//        list2.add(album3);
//        list2.add(album4);
//        list2.add(album7);
//        list2.add(album8);
//        list2.add(album10);
//        list2.add(album12);
//        list2.add(album20);
//        List<Album> list3 = new ArrayList<>();
//        list3.add(album1);
//        list3.add(album6);
//        list3.add(album13);
//        list3.add(album17);
//        List<Album> list4 = new ArrayList<>();
//        list4.add(album2);
//        list4.add(album9);
//        list4.add(album12);
//        list4.add(album14);
//        list4.add(album17);
//        list4.add(album20);
//        List<Album> list5 = new ArrayList<>();
//        list5.add(album1);
//        list5.add(album4);
//        list5.add(album8);
//        list5.add(album11);
//        list5.add(album14);
//        list5.add(album15);
//        list5.add(album19);
//        list5.add(album20);
//        List<Album> list6 = new ArrayList<>();
//        list6.add(album5);
//        list6.add(album6);
//        list6.add(album9);
//        list6.add(album13);
//        list6.add(album19);
//        List<Album> list7 = new ArrayList<>();
//        list7.add(album3);
//        list7.add(album7);
//        list7.add(album12);
//        list7.add(album17);
//        List<Album> list8 = new ArrayList<>();
//        list8.add(album1);
//        list8.add(album2);
//        list8.add(album5);
//        list8.add(album13);
//        list8.add(album19);
//        list8.add(album21);
//        Playlist playlist1 = new Playlist(1, "Playlist1", timestamp, list1);
//        Playlist playlist2 = new Playlist(2, "Playlist2", timestamp, list2);
//        Playlist playlist3 = new Playlist(3, "Playlist3", timestamp, list3);
//        Playlist playlist4 = new Playlist(4, "Playlist4", timestamp, list4);
//        Playlist playlist5 = new Playlist(5, "Playlist5", timestamp, list5);
//        Playlist playlist6 = new Playlist(6, "Playlist6", timestamp, list6);
//        Playlist playlist7 = new Playlist(7, "Playlist7", timestamp, list7);
//        Playlist playlist8 = new Playlist(8, "Playlist8", timestamp, list8);
//        PlaylistDAO playlistConnection = new PlaylistDAO();
//        playlistConnection.create(playlist1);
//        playlistConnection.create(playlist2);
//        playlistConnection.create(playlist3);
//        playlistConnection.create(playlist4);
//        playlistConnection.create(playlist5);
//        playlistConnection.create(playlist6);
//        playlistConnection.create(playlist7);
//        playlistConnection.create(playlist8);
//        System.out.println(playlistConnection.findById(playlist5));
//        Database.getConnection().commit();
//        Users user = new Users();
//        System.out.println(user.findByName("George"));
//          Album album = new Album();
//          AlbumDAO albumDAO = new AlbumDAO();
//          album.setId(1);
//          album = albumDAO.findById(album);
//          System.out.println("Releaseyear: " + album.getReleaseYear());
//          System.out.println("Title: " + album.getTitle());
//          System.out.println("Artist: " + album.getArtist());
//          System.out.println("Genre: " + album.getGenre());
          Dates dates = new Dates();
          dates.setVertices();
          dates.setAlbums();
          dates.setEdges();
          Graph graph = GraphBuilder.numVertices(dates.getVertices() + 1).buildGraph();
          List<Edge> edges = dates.getEdges();
          for(Edge edge : edges) {
              graph.addEdge(edge);
          }
          int sum = 0;
          DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
          Date date = new Date();
          date = dateFormat.parse(dateFormat.format(date));
          Timestamp timestamp = new Timestamp(date.getTime());
          int i = 21;
          BronKerboschCliqueIterator iterator = new BronKerboschCliqueIterator(graph);
          while(iterator.hasNext()) {
              Clique clique = iterator.next();
              Playlist playlist = new Playlist();
              playlist.setId(i);
              String name = "playlist" + i;
              playlist.setName(name);
              playlist.setTime(timestamp);
              int[] vertices = clique.vertices();
              List<Album> albums = new ArrayList<>();
              System.out.println("Set of albums: ");
              for(int vertice : vertices) {
                  if(vertice != 0) {
                      System.out.println("Vertice: " + vertice);
                      Album album = new Album();
                      album.setId(vertice);
                      AlbumDAO albumDAO = new AlbumDAO();
                      album = albumDAO.findById(album);
                      System.out.println(album.getTitle());
                      albums.add(album);
                  }
              }
              System.out.println("Size: " + albums.size());
              System.out.println("Albums: " + albums);
              if(albums.size() > 0) {
                  playlist.setAlbums(albums);
                  PlaylistDAO playlistDAO = new PlaylistDAO();
                  playlistDAO.create(playlist);
                  Database.getConnection().commit();
              }
              i += 1;
           }
    }
}
